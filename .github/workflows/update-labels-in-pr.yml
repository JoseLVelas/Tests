name: Update Labels in PR
on: repository_dispatch
jobs:
  update_labels_in_pr:
    runs-on: ubuntu-latest
    permissions:
      issues: write
      pull-requests: write
    steps:
      - uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.TRILOGY_PERSONAL_TOKEN }}
          retries: 3
          script: |
            // Splits the PR link into different stubs that correspond to different information about the PR
            var pr_link_items = context.payload.client_payload.pr_link.split('/')
            const pr_number = pr_link_items.pop()
            const issue_type = pr_link_items.pop()
            const repo = pr_link_items.pop()
            const owner = pr_link_items.pop()
            // Prints the PR variables
            console.log("pr_number: " + pr_number)
            console.log("issue_type: " + issue_type)
            console.log("repo: " + repo)
            console.log("owner: " + owner)
            
            // Gets the JIRA id from the calling automation
            const jira_id = context.payload.client_payload.jira_id
            console.log("jira_id: " + jira_id)
            
            // The JIRA user who performed the action
            const jira_user = context.payload.client_payload.jira_user
            console.log("jira_user: " + jira_user)
            
            // Gets the JIRA statuses 
            const jira_from_status = context.payload.client_payload.jira_from_status
            const jira_to_status = context.payload.client_payload.jira_to_status
            console.log("jira_from_status: " + jira_from_status)
            console.log("jira_to_status: " + jira_to_status)

            var remove_labels = []
            var add_labels = []
            
            // Defines the labels arrays to be added and removed, according to the JIRA issue status
            if (jira_to_status.localeCompare("In Development", "en", {sensitivity: "base"}) == 0) {
                remove_labels = ["approved-dev", "approved-qa", "approved-regression"]
                add_labels = []
            } else if (jira_to_status.localeCompare("In QA", "en", {sensitivity: "base"}) == 0) {
                remove_labels = ["rejected-qa", "rejected-dev"]
                add_labels = ["approved-dev"]
            } else if (jira_to_status.localeCompare("Waits for Merge", "en", {sensitivity: "base"}) == 0) {
                remove_labels = ["rejected-qa"]
                add_labels = ["approved-qa"]
            }
            
            console.log("remove_labels: " + remove_labels)
            console.log("add_labels: " + add_labels)
            
            // Removes the labels that should not be there anymore
            /*github.rest.issues.removeLabel({
                issue_number: pr_number,
                owner: owner,
                repo: repo,
                name: remove_labels
            })*/
            
            remove_labels.forEach(async function(label_to_remove) {
                try {
                    console.log("entering try block REMOVE - " + label_to_remove);
                    await github.rest.issues.removeLabel({
                        issue_number: pr_number,
                        owner: owner,
                        repo: repo,
                        name: [label_to_remove]
                    })
                } catch (e) {
                  console.log("Could not remove label `" + label_to_remove + "`");
                  //console.log(e);
                }
            })
            
            // Adds the needed labels
            /*github.rest.issues.addLabels({
                issue_number: pr_number,
                owner: owner,
                repo: repo,
                labels: add_labels
            })*/

            add_labels.forEach(async function(label_to_add) {
                try {
                    console.log("entering try block ADD - " + label_to_add);
                    await github.rest.issues.addLabels({
                        issue_number: pr_number,
                        owner: owner,
                        repo: repo,
                        labels: [label_to_add]
                    })
                } catch (e) {
                  console.log("Could not add label `" + label_to_remove + "`");
                  //console.log(e);
                }
            })
            
            
            /*github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: 'ðŸ‘‹ Thanks for reporting!'
            })*/
